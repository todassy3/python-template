[tox]
envlist = py{37,38,39}-{lint,test}

[testenv]
deps =
    pytest
    pytest-cov
    pytest-randomly
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
commands =
    python --version
    pytest --version
    pytest tests/ --doctest-modules --cov=mypackage/ --cov-branch --cov-report=xml:{toxworkdir}/{envname}-coverage.xml --junitxml={toxworkdir}/{envname}-report.xml

[testenv:black]
skip_install = true
deps =
    black
commands =
    black --version
    black setup.py mypackage/ tests/ --diff --check

[testenv:isort]
skip_install = true
deps =
    isort
commands =
    isort --version-number
    isort setup.py mypackage/ --profile=black --check-only

[testenv:flake8]
skip_install = true
deps =
    flake8
commands =
    flake8 --version
    flake8 setup.py mypackage/

[flake8]
; blackとの共存に必要な設定
max-line-length = 88
extend-ignore = E203

[testenv:pylint]
deps =
    pylint
commands =
    pylint --version
    ; エラーのみを検出 (オプションはblackとの共存に必要な設定)
    pylint setup.py mypackage/ --max-line-length=88 --errors-only
    ; エラー以外も検出するが，終了コードを0とする
    pylint setup.py mypackage/ --max-line-length=88 --exit-zero

[testenv:mypy]
deps =
    mypy
commands =
    mypy --version
    mypy setup.py mypackage/ --ignore-missing-imports

[testenv:bandit]
skip_install = true
deps =
    bandit
commands =
    bandit --version
    bandit -r mypackage/

[testenv:py{37,38,39}-lint]
deps =
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:mypy]deps}
    {[testenv:bandit]deps}
commands =
    python --version
    python setup.py check
    {[testenv:black]commands}
    {[testenv:isort]commands}
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:mypy]commands}
    {[testenv:bandit]commands}
